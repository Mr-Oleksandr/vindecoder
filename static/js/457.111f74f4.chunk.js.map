{"version":3,"file":"static/js/457.111f74f4.chunk.js","mappings":"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","sources":["components/VehicleInfo/VehicleInfo.tsx","components/VehicleCodeList/VehicleCodeList.tsx","redux/actions.ts","redux/actionsDispatch.ts","components/SearchVinCode/SearchVinCode.tsx","components/HistoryVinCode/HistoryVinCode.tsx","pages/DecodeVinPage/DecodeVin.tsx","services/vindecoderService.ts"],"sourcesContent":["import React, { FC } from 'react';\r\nimport './Vehicle.css';\r\ninterface VehicleInfoProps {\r\n   Value: string;\r\n   Variable: string;\r\n   VariableId: number;\r\n}\r\n\r\nconst VehicleInfo: FC<VehicleInfoProps> = ({ Value, VariableId, Variable }) => {\r\n   return (\r\n      <article className='vehicle-info'>\r\n         <h2>{Variable}</h2>\r\n         <p>{Value}</p>\r\n      </article>\r\n   );\r\n};\r\n\r\nexport default VehicleInfo;\r\n","import React from 'react';\r\nimport { RootState } from '../../store/store';\r\nimport { useSelector } from 'react-redux';\r\nimport VehicleInfo from '../VehicleInfo/VehicleInfo';\r\nimport RobotPreloader from '@avtopro/preloader/dist/index';\r\nimport './VehicleCodeList.css';\r\n\r\nconst VehicleCodeList = () => {\r\n   const { articles, loading } = useSelector((state: RootState) => state);\r\n   console.log(loading)\r\n   if (!articles?.length) {\r\n      return <div>enter vin code</div>;\r\n   }\r\n\r\n   if (loading) {\r\n      return <RobotPreloader />;\r\n   }\r\n\r\n   return (\r\n      <div className='vehicle-list-container'>\r\n         <ul className='vehicle-list-info'>\r\n            {articles\r\n               .filter((item: any) => item.Value)\r\n               .map((item: any) => {\r\n                  return <VehicleInfo {...item} key={item.VariableId} />;\r\n               })}\r\n         </ul>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default VehicleCodeList;\r\n","import { ActionType, Action } from './actionsTypes';\r\nimport { Dispatch } from 'redux';\r\nimport VinDecoderServices from '../services/vindecoderService';\r\n\r\nconst swapiDecoder = new VinDecoderServices();\r\n\r\nexport const getArticles = (vinCode: string) => {\r\n   return async (dispatch: Dispatch<Action>) => {\r\n      try {\r\n         dispatch({ type: ActionType.GET_VINCODE_PENDING });\r\n         const response = await swapiDecoder.getDecodeVin(vinCode);\r\n         dispatch({ type: ActionType.GET_VINCODE_SUCCESS, payload: response });\r\n      } catch (error: any) {\r\n         dispatch({ type: ActionType.GET_VINCODE_FAIL, payload: error });\r\n      }\r\n   };\r\n};\r\n\r\nexport const resetError = () => {\r\n   return async (dispatch: Dispatch<Action>) => {\r\n         return dispatch({ type: ActionType.GET_VINCODE_FAIL, payload: null });\r\n   \r\n   };\r\n}","import { ThunkDispatch } from 'redux-thunk';\r\nimport { AnyAction } from 'redux';\r\nimport { State } from './Reducer';\r\nimport { useDispatch } from 'react-redux';\r\n\r\ntype AppDispatch = ThunkDispatch<State, any, AnyAction>;\r\n\r\nexport const actionDispatch = () => {\r\n   const dispatch: AppDispatch = useDispatch();\r\n   return {\r\n      dispatch,\r\n   };\r\n};\r\n","import React, {useState} from 'react';\r\nimport { getArticles, resetError } from '../../redux/actions';\r\nimport { actionDispatch } from '../../redux/actionsDispatch';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../store/store';\r\nimport Button from '@avtopro/button/dist/index'\r\nimport TextInput from '@avtopro/text-input/dist/index'\r\nimport FormFrame from '@avtopro/form-frame/dist/index';\r\nimport Modal from '@avtopro/modal/dist/index'\r\nimport './SearchVinCode.css';\r\nimport { useForm } from 'react-hook-form';\r\n\r\n\r\nconst SearchVinCode = () => { \r\n   const {\r\n      register,\r\n      handleSubmit,\r\n      formState: { errors },\r\n   } = useForm();\r\n   const { dispatch } = actionDispatch();\r\n   const { loading, error } = useSelector((state: RootState) => state);\r\n\r\n   \r\n   const onSubmit = async (data: any) => {\r\n      try {\r\n         await dispatch(getArticles(data.text));\r\n      } catch (e) {\r\n         console.log(e)\r\n      }\r\n   };\r\n\r\n\r\n   if(error){\r\n      return (\r\n         <Modal mode=\"error\" onClose={() => dispatch(resetError())}>\r\n            <div className=\"modwin__caption\">Ошибка соединения</div>\r\n            <div className=\"modwin__sub-caption\">\r\n                Данные формы не отправлены, произошел обрыв соединения.\r\n                Обратитесь к провайдеру вашей сети.\r\n            </div>\r\n         </Modal>\r\n      ) \r\n   }\r\n      \r\n   return (\r\n      <form onSubmit={handleSubmit(onSubmit)} className='search-form'>\r\n         <label className='label' htmlFor='text'>\r\n            Enter vin code\r\n         </label>\r\n        <FormFrame pending={loading ? true : false}>\r\n        <TextInput\r\n            id=\"text\" \r\n            className='form-control'\r\n            placeholder='1FTFW1CT5DFC10312'\r\n            {...register('text', { required: true, maxLength: 17 })}\r\n         />\r\n        </FormFrame>\r\n         {errors.text && errors.text.type === 'required' && (\r\n            <span className='error'>This is required</span>\r\n         )}\r\n         {errors.text && errors.text.type === 'maxLength' && (\r\n            <span className='error'>Max length 17</span>\r\n         )}\r\n         <Button type='submit' className='submit' theme=\"blue\" uppercase>Search Vin <i className='btn-icon'></i></Button>\r\n      </form>\r\n   );\r\n};\r\n\r\nexport default SearchVinCode;\r\n","import React from 'react';\r\nimport Select,{Option} from '@avtopro/select/dist/index'\r\nimport { nanoid } from 'nanoid';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../store/store';\r\nimport { actionDispatch } from '../../redux/actionsDispatch';\r\nimport { getArticles } from '../../redux/actions';\r\nimport './HistoryVinCode.css';\r\n\r\nconst HistoryVinCode = () => {\r\n   const { vinCode } = useSelector((state: RootState) => state);\r\n   const { dispatch } = actionDispatch();\r\n\r\n   const handleChange = (item: string) => {\r\n      dispatch(getArticles(item[0].replace('VIN:', '')));\r\n   };\r\n\r\n\r\n   return (\r\n      <div>\r\n         <h3>History of search results</h3>\r\n         <Select onChange={(_: any, newValue: string) => handleChange(newValue)} defaultValue={vinCode[0] ? vinCode[0] : 'Select vin'}>\r\n            {!!vinCode &&\r\n               vinCode.map((item) => {\r\n                  return (\r\n                     <Option key={nanoid()} value={item} className='li-item' >\r\n                        {item}\r\n                     </Option>\r\n                  );\r\n               })}\r\n         </Select>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default HistoryVinCode;\r\n","import React from 'react';\r\nimport VehicleCodeList from '../../components/VehicleCodeList/VehicleCodeList';\r\nimport SearchVinCode from '../../components/SearchVinCode/SearchVinCode';\r\nimport HistoryVinCode from '../../components/HistoryVinCode/HistoryVinCode';\r\n\r\nconst DecodeVin = () => {\r\n   return (\r\n      <div className='decode-page'>\r\n         <SearchVinCode />\r\n         <HistoryVinCode />\r\n         <VehicleCodeList />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default DecodeVin;\r\n","export default class VinDecoderServices {\r\n   urlBase = 'https://vpic.nhtsa.dot.gov/api/';\r\n   getData = async (url: string) => {\r\n      try {\r\n         const data = await fetch(`${this.urlBase}/${url}`);\r\n        const response = await data.json();\r\n        return response;\r\n      } catch (error) {\r\n         throw new Error();\r\n      }\r\n   };\r\n   getDecodeVin = async (vinCode: string) => {\r\n      try {\r\n         const articles = await this.getData(`vehicles/decodevin/${vinCode}?format=json`);\r\n         return articles;\r\n      } catch (error) {\r\n         throw new Error();\r\n      }\r\n   };\r\n   getVariableList = async () => {\r\n      try {\r\n         const getVehicleList = await this.getData('/vehicles/getvehiclevariablelist?format=json');\r\n         return getVehicleList;\r\n      } catch (error) {\r\n         throw new Error();\r\n      }\r\n   };\r\n   getVariable = async (id: string) => {\r\n      try {\r\n         const getVehicleList = await this.getData(\r\n            `/vehicles/getvehiclevariablevalueslist/${id}?format=json`,\r\n         );\r\n         return getVehicleList;\r\n      } catch (error) {\r\n         throw new Error();\r\n      }\r\n   };\r\n}\r\n"],"names":["Value","Variable","VariableId","className","useSelector","state","articles","loading","console","log","length","filter","item","map","key","swapiDecoder","VinDecoderServices","getArticles","vinCode","dispatch","type","ActionType","getDecodeVin","response","payload","actionDispatch","useDispatch","useForm","register","handleSubmit","errors","formState","error","onSubmit","data","text","mode","onClose","htmlFor","pending","id","placeholder","required","maxLength","theme","uppercase","onChange","_","newValue","replace","defaultValue","Option","value","nanoid","urlBase","getData","url","fetch","json","Error","getVariableList","getVehicleList","getVariable"],"sourceRoot":""}